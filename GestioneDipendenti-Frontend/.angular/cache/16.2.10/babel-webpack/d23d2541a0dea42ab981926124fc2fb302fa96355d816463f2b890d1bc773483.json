{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class NavbarutenteComponent {\n  constructor(renderer, el) {\n    this.renderer = renderer;\n    this.el = el;\n    this.indicators = []; // You can replace 'any[]' with a more specific type if needed\n  }\n\n  ngOnInit() {\n    const currentSec = this.getSecondsToday();\n    const seconds = currentSec / 60 % 1;\n    const minutes = currentSec / 3600 % 1;\n    const hours = currentSec / 43200 % 1;\n    this.setTime(60 * seconds, 'second');\n    this.setTime(3600 * minutes, 'minute');\n    this.setTime(43200 * hours, 'hour');\n  }\n  setTime(left, hand) {\n    const clockHand = this.renderer.selectRootElement(`.clock__${hand}`, true);\n    // Replace the following line with Angular-specific logic to set animation-delay\n    // For simplicity, I'm using a console.log statement.\n    console.log(`Setting animation-delay for .clock__${hand}: ${left * -1}s`);\n    // If you have an array of indicators to loop through, you can adapt the following logic\n    this.indicators.forEach((indicator, index) => {\n      const indicatorElement = this.renderer.selectRootElement(`.clock__indicator:nth-of-type(${index + 1})`, true);\n      // Set animation delay for indicators\n      // Replace the following line with Angular-specific logic to set animation-delay\n      console.log(`Setting animation-delay for .clock__indicator(${index + 1}): ${left * -1}s`);\n    });\n  }\n  getSecondsToday() {\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const diff = now.getTime() - today.getTime();\n    return Math.round(diff / 1000);\n  }\n  static #_ = this.ɵfac = function NavbarutenteComponent_Factory(t) {\n    return new (t || NavbarutenteComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NavbarutenteComponent,\n    selectors: [[\"app-navbarutente\"]],\n    decls: 2,\n    vars: 0,\n    consts: [[1, \"navbar\", \"navbar-expand-lg\", \"navbar-light\", \"bg-light\"]],\n    template: function NavbarutenteComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0, \" >\");\n        i0.ɵɵelement(1, \"nav\", 0);\n      }\n    },\n    styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\tvar __webpack_modules__ = ({\\n\\n\\n 450:\\n\\n\\n\\n\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\n\\\\nSyntaxError\\\\n\\\\n(65:20) C:\\\\\\\\Users\\\\\\\\Anna Leoni\\\\\\\\Desktop\\\\\\\\veggieticket\\\\\\\\nuovo\\\\\\\\GestioneDipendenti\\\\\\\\GestioneDipendenti-Frontend\\\\\\\\src\\\\\\\\app\\\\\\\\navbarutente\\\\\\\\navbarutente.component.css Unknown word\\\\n\\\\n \\\\u001b[90m 63 | \\\\u001b[39m  color\\\\u001b[33m:\\\\u001b[39m \\\\u001b[36mvar\\\\u001b[39m\\\\u001b[36m(--first-color)\\\\u001b[39m\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m 64 | \\\\u001b[39m  cursor\\\\u001b[33m:\\\\u001b[39m pointer\\\\u001b[33m;\\\\u001b[39m\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 65 | \\\\u001b[39m  transition\\\\u001b[33m:\\\\u001b[39m \\\\u001b[33m.4s\\\\u001b[39m\\\\u001b[33m;\\\\u001b[39m // For dark mode animation\\\\n \\\\u001b[90m    | \\\\u001b[39m                   \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 66 | \\\\u001b[39m\\\\u001b[33m}\\\\u001b[39m\\\\n \\\\u001b[90m 67 | \\\\u001b[39m\\\\n\\\");\\n\\n\\n })\\n\\n\\n \\t})[_ngcontent-%COMP%];\\n\\n\\n\\n \\t\\n\\n \\t//[_ngcontent-%COMP%]   startup\\n\\n[_ngcontent-%COMP%]   //[_ngcontent-%COMP%]   Load[_ngcontent-%COMP%]   entry[_ngcontent-%COMP%]   module[_ngcontent-%COMP%]   and[_ngcontent-%COMP%]   return[_ngcontent-%COMP%]   exports\\n\\n[_ngcontent-%COMP%]   //[_ngcontent-%COMP%]   This[_ngcontent-%COMP%]   entry[_ngcontent-%COMP%]   module[_ngcontent-%COMP%]   doesn't[_ngcontent-%COMP%]   tell[_ngcontent-%COMP%]   about[_ngcontent-%COMP%]   it's[_ngcontent-%COMP%]   top-level[_ngcontent-%COMP%]   declarations[_ngcontent-%COMP%]   so[_ngcontent-%COMP%]   it[_ngcontent-%COMP%]   can't[_ngcontent-%COMP%]   be[_ngcontent-%COMP%]   inlined\\n\\n[_ngcontent-%COMP%]   var[_ngcontent-%COMP%]   __webpack_exports__[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] {};\\n\\n \\t__webpack_modules__[450]();\\n\\n \\tresource = __webpack_exports__;\\n\\n \\t\\n\\n })()\\n;\\n/*# sourceMappingURL=navbarutente.component.css.map*/\"]\n  });\n}","map":{"version":3,"names":["NavbarutenteComponent","constructor","renderer","el","indicators","ngOnInit","currentSec","getSecondsToday","seconds","minutes","hours","setTime","left","hand","clockHand","selectRootElement","console","log","forEach","indicator","index","indicatorElement","now","Date","today","getFullYear","getMonth","getDate","diff","getTime","Math","round","_","i0","ɵɵdirectiveInject","Renderer2","ElementRef","_2","selectors","decls","vars","consts","template","NavbarutenteComponent_Template","rf","ctx","ɵɵtext","ɵɵelement"],"sources":["C:\\Users\\Anna Leoni\\Desktop\\veggieticket\\nuovo\\GestioneDipendenti\\GestioneDipendenti-Frontend\\src\\app\\navbarutente\\navbarutente.component.ts","C:\\Users\\Anna Leoni\\Desktop\\veggieticket\\nuovo\\GestioneDipendenti\\GestioneDipendenti-Frontend\\src\\app\\navbarutente\\navbarutente.component.html"],"sourcesContent":["import { Component, OnInit, Renderer2, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-navbarutente',\n  templateUrl: './navbarutente.component.html',\n  styleUrls: ['./navbarutente.component.css']\n})\nexport class NavbarutenteComponent {\n  indicators: any[] = []; // You can replace 'any[]' with a more specific type if needed\n\n  constructor(private renderer: Renderer2, private el: ElementRef) {}\n\n  ngOnInit(): void {\n    const currentSec = this.getSecondsToday();\n\n    const seconds = (currentSec / 60) % 1;\n    const minutes = (currentSec / 3600) % 1;\n    const hours = (currentSec / 43200) % 1;\n\n    this.setTime(60 * seconds, 'second');\n    this.setTime(3600 * minutes, 'minute');\n    this.setTime(43200 * hours, 'hour');\n  }\n\n  setTime(left: number, hand: string): void {\n    const clockHand = this.renderer.selectRootElement(`.clock__${hand}`, true);\n\n    // Replace the following line with Angular-specific logic to set animation-delay\n    // For simplicity, I'm using a console.log statement.\n    console.log(`Setting animation-delay for .clock__${hand}: ${left * -1}s`);\n\n    // If you have an array of indicators to loop through, you can adapt the following logic\n    this.indicators.forEach((indicator, index) => {\n      const indicatorElement = this.renderer.selectRootElement(`.clock__indicator:nth-of-type(${index + 1})`, true);\n      // Set animation delay for indicators\n      // Replace the following line with Angular-specific logic to set animation-delay\n      console.log(`Setting animation-delay for .clock__indicator(${index + 1}): ${left * -1}s`);\n    });\n  }\n\n  getSecondsToday(): number {\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n\n    const diff = now.getTime() - today.getTime();\n    return Math.round(diff / 1000);\n  }\n}\n","<!--<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div class=\"container-fluid\">\n      <a class=\"navbar-brand\">Username</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link active\" aria-current=\"page\" [routerLink]=\"['/home']\">Home</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" [routerLink]=\"['/orari']\">Orari</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>-->\n  ><nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n"],"mappings":";AAOA,OAAM,MAAOA,qBAAqB;EAGhCC,YAAoBC,QAAmB,EAAUC,EAAc;IAA3C,KAAAD,QAAQ,GAARA,QAAQ;IAAqB,KAAAC,EAAE,GAAFA,EAAE;IAFnD,KAAAC,UAAU,GAAU,EAAE,CAAC,CAAC;EAE0C;;EAElEC,QAAQA,CAAA;IACN,MAAMC,UAAU,GAAG,IAAI,CAACC,eAAe,EAAE;IAEzC,MAAMC,OAAO,GAAIF,UAAU,GAAG,EAAE,GAAI,CAAC;IACrC,MAAMG,OAAO,GAAIH,UAAU,GAAG,IAAI,GAAI,CAAC;IACvC,MAAMI,KAAK,GAAIJ,UAAU,GAAG,KAAK,GAAI,CAAC;IAEtC,IAAI,CAACK,OAAO,CAAC,EAAE,GAAGH,OAAO,EAAE,QAAQ,CAAC;IACpC,IAAI,CAACG,OAAO,CAAC,IAAI,GAAGF,OAAO,EAAE,QAAQ,CAAC;IACtC,IAAI,CAACE,OAAO,CAAC,KAAK,GAAGD,KAAK,EAAE,MAAM,CAAC;EACrC;EAEAC,OAAOA,CAACC,IAAY,EAAEC,IAAY;IAChC,MAAMC,SAAS,GAAG,IAAI,CAACZ,QAAQ,CAACa,iBAAiB,CAAC,WAAWF,IAAI,EAAE,EAAE,IAAI,CAAC;IAE1E;IACA;IACAG,OAAO,CAACC,GAAG,CAAC,uCAAuCJ,IAAI,KAAKD,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC;IAEzE;IACA,IAAI,CAACR,UAAU,CAACc,OAAO,CAAC,CAACC,SAAS,EAAEC,KAAK,KAAI;MAC3C,MAAMC,gBAAgB,GAAG,IAAI,CAACnB,QAAQ,CAACa,iBAAiB,CAAC,iCAAiCK,KAAK,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC;MAC7G;MACA;MACAJ,OAAO,CAACC,GAAG,CAAC,iDAAiDG,KAAK,GAAG,CAAC,MAAMR,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC;IAC3F,CAAC,CAAC;EACJ;EAEAL,eAAeA,CAAA;IACb,MAAMe,GAAG,GAAG,IAAIC,IAAI,EAAE;IACtB,MAAMC,KAAK,GAAG,IAAID,IAAI,CAACD,GAAG,CAACG,WAAW,EAAE,EAAEH,GAAG,CAACI,QAAQ,EAAE,EAAEJ,GAAG,CAACK,OAAO,EAAE,CAAC;IAExE,MAAMC,IAAI,GAAGN,GAAG,CAACO,OAAO,EAAE,GAAGL,KAAK,CAACK,OAAO,EAAE;IAC5C,OAAOC,IAAI,CAACC,KAAK,CAACH,IAAI,GAAG,IAAI,CAAC;EAChC;EAAC,QAAAI,CAAA,G;qBAvCUhC,qBAAqB,EAAAiC,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,SAAA,GAAAF,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAG,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAArBrC,qBAAqB;IAAAsC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCWhCX,EAAA,CAAAa,MAAA,SAAC;QAAAb,EAAA,CAAAc,SAAA,aAA2D"},"metadata":{},"sourceType":"module","externalDependencies":[]}