{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction OrariutenteComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 8);\n  }\n}\nexport class OrariutenteComponent {\n  constructor() {\n    this.indicators = Array.from({\n      length: 60\n    }, (_, index) => index + 1);\n  }\n  ngOnInit() {\n    this.setupClock();\n  }\n  setupClock() {\n    const currentSec = this.getSecondsToday();\n    const seconds = currentSec / 60 % 1;\n    const minutes = currentSec / 3600 % 1;\n    const hours = currentSec / 43200 % 1;\n    this.setTime(60 * seconds, 'second');\n    this.setTime(3600 * minutes, 'minute');\n    this.setTime(43200 * hours, 'hour');\n  }\n  setTime(left, hand) {\n    // Implement the logic to set animation delay for each hand\n  }\n  getSecondsToday() {\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const diff = now.getTime() - today.getTime();\n    return Math.round(diff / 1000);\n  }\n  static #_ = this.ɵfac = function OrariutenteComponent_Factory(t) {\n    return new (t || OrariutenteComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OrariutenteComponent,\n    selectors: [[\"app-orariutente\"]],\n    decls: 12,\n    vars: 1,\n    consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [1, \"clock\"], [1, \"clock__second\"], [1, \"clock__minute\"], [1, \"clock__hour\"], [\"class\", \"clock__indicator\", 4, \"ngFor\", \"ngForOf\"], [1, \"clock__indicator\"]],\n    template: function OrariutenteComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n        i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2);\n        i0.ɵɵelementStart(4, \"title\");\n        i0.ɵɵtext(5, \"Centered Clock\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"body\")(7, \"div\", 3);\n        i0.ɵɵelement(8, \"div\", 4)(9, \"div\", 5)(10, \"div\", 6);\n        i0.ɵɵtemplate(11, OrariutenteComponent_div_11_Template, 1, 0, \"div\", 7);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngForOf\", ctx.indicators);\n      }\n    },\n    dependencies: [i1.NgForOf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\", \"html[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\\n            height: 100%;\\n            margin: 0;\\n            background-color: black;\\n            display: flex;\\n            align-items: center;\\n            justify-content: center;\\n        }\\n\\n        .clock[_ngcontent-%COMP%] {\\n            width: 200px;\\n            height: 200px;\\n            border-radius: 50%;\\n            position: relative;\\n            display: flex;\\n            justify-content: center;\\n            align-items: center;\\n        }\\n\\n        .clock__second[_ngcontent-%COMP%], .clock__minute[_ngcontent-%COMP%], .clock__hour[_ngcontent-%COMP%], .clock__indicator[_ngcontent-%COMP%] {\\n            position: absolute;\\n            left: 50%;\\n            width: 2px;\\n            background: white;\\n            transform-origin: bottom center;\\n            border-radius: 1px;\\n        }\\n\\n        .clock__second[_ngcontent-%COMP%] {\\n            height: 90px; \\n\\n            background: #4b9aaa;\\n            animation: _ngcontent-%COMP%_time 60s infinite steps(60);\\n        }\\n\\n        .clock__minute[_ngcontent-%COMP%] {\\n            height: 80px; \\n\\n            opacity: 0.75;\\n            animation: _ngcontent-%COMP%_time 3600s linear infinite;\\n        }\\n\\n        .clock__hour[_ngcontent-%COMP%] {\\n            height: 60px; \\n\\n            animation: _ngcontent-%COMP%_time 43200s linear infinite;\\n        }\\n\\n        .clock__indicator[_ngcontent-%COMP%] {\\n            height: 2px;\\n            background: #4b9aaa;\\n            border-top: 7px solid white;\\n        }\\n\\n        .clock__indicator[_ngcontent-%COMP%]:nth-of-type(5n) {\\n            opacity: 1;\\n            height: 7px;\\n            border-top: 7px solid white;\\n        }\\n\\n        @for $i from 1 through 60 {\\n            .clock__indicator:nth-of-type(#{$i}) {\\n                transform: rotateZ(calc(6deg * #{$i}));\\n            }\\n        }\\n\\n        @keyframes _ngcontent-%COMP%_time {\\n            to {\\n                transform: rotateZ(360deg);\\n            }\\n        }\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelement","OrariutenteComponent","constructor","indicators","Array","from","length","_","index","ngOnInit","setupClock","currentSec","getSecondsToday","seconds","minutes","hours","setTime","left","hand","now","Date","today","getFullYear","getMonth","getDate","diff","getTime","Math","round","_2","selectors","decls","vars","consts","template","OrariutenteComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","OrariutenteComponent_div_11_Template","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Anna Leoni\\Desktop\\veggieticket\\nuovo\\GestioneDipendenti\\GestioneDipendenti-Frontend\\src\\app\\orariutente\\orariutente.component.ts","C:\\Users\\Anna Leoni\\Desktop\\veggieticket\\nuovo\\GestioneDipendenti\\GestioneDipendenti-Frontend\\src\\app\\orariutente\\orariutente.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-orariutente',\n  templateUrl: './orariutente.component.html',\n  styleUrls: ['./orariutente.component.css']\n})\nexport class OrariutenteComponent {\n  indicators: number[] = Array.from({ length: 60 }, (_, index) => index + 1);\n\n  ngOnInit(): void {\n    this.setupClock();\n  }\n\n  setupClock() {\n    const currentSec = this.getSecondsToday();\n    const seconds = (currentSec / 60) % 1;\n    const minutes = (currentSec / 3600) % 1;\n    const hours = (currentSec / 43200) % 1;\n\n    this.setTime(60 * seconds, 'second');\n    this.setTime(3600 * minutes, 'minute');\n    this.setTime(43200 * hours, 'hour');\n  }\n\n  setTime(left: number, hand: string) {\n    // Implement the logic to set animation delay for each hand\n  }\n\n  getSecondsToday(): number {\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const diff = now.getTime() - today.getTime();\n    return Math.round(diff / 1000);\n  }\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Centered Clock</title>\n    <style>\n        html, body {\n            height: 100%;\n            margin: 0;\n            background-color: black;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n\n        .clock {\n            width: 200px;\n            height: 200px;\n            border-radius: 50%;\n            position: relative;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n\n        .clock__second,\n        .clock__minute,\n        .clock__hour,\n        .clock__indicator {\n            position: absolute;\n            left: 50%;\n            width: 2px;\n            background: white;\n            transform-origin: bottom center;\n            border-radius: 1px;\n        }\n\n        .clock__second {\n            height: 90px; /* Adjust as needed */\n            background: #4b9aaa;\n            animation: time 60s infinite steps(60);\n        }\n\n        .clock__minute {\n            height: 80px; /* Adjust as needed */\n            opacity: 0.75;\n            animation: time 3600s linear infinite;\n        }\n\n        .clock__hour {\n            height: 60px; /* Adjust as needed */\n            animation: time 43200s linear infinite;\n        }\n\n        .clock__indicator {\n            height: 2px;\n            background: #4b9aaa;\n            border-top: 7px solid white;\n        }\n\n        .clock__indicator:nth-of-type(5n) {\n            opacity: 1;\n            height: 7px;\n            border-top: 7px solid white;\n        }\n\n        @for $i from 1 through 60 {\n            .clock__indicator:nth-of-type(#{$i}) {\n                transform: rotateZ(calc(6deg * #{$i}));\n            }\n        }\n\n        @keyframes time {\n            to {\n                transform: rotateZ(360deg);\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"clock\">\n        <div class=\"clock__second\"></div>\n        <div class=\"clock__minute\"></div>\n        <div class=\"clock__hour\"></div>\n        <div class=\"clock__indicator\" *ngFor=\"let indicator of indicators\"></div>\n    </div>\n</body>\n</html>\n"],"mappings":";;;;ICqFQA,EAAA,CAAAC,SAAA,aAAyE;;;AD9EjF,OAAM,MAAOC,oBAAoB;EALjCC,YAAA;IAME,KAAAC,UAAU,GAAaC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAE,EAAE,CAACC,CAAC,EAAEC,KAAK,KAAKA,KAAK,GAAG,CAAC,CAAC;;EAE1EC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAA,UAAUA,CAAA;IACR,MAAMC,UAAU,GAAG,IAAI,CAACC,eAAe,EAAE;IACzC,MAAMC,OAAO,GAAIF,UAAU,GAAG,EAAE,GAAI,CAAC;IACrC,MAAMG,OAAO,GAAIH,UAAU,GAAG,IAAI,GAAI,CAAC;IACvC,MAAMI,KAAK,GAAIJ,UAAU,GAAG,KAAK,GAAI,CAAC;IAEtC,IAAI,CAACK,OAAO,CAAC,EAAE,GAAGH,OAAO,EAAE,QAAQ,CAAC;IACpC,IAAI,CAACG,OAAO,CAAC,IAAI,GAAGF,OAAO,EAAE,QAAQ,CAAC;IACtC,IAAI,CAACE,OAAO,CAAC,KAAK,GAAGD,KAAK,EAAE,MAAM,CAAC;EACrC;EAEAC,OAAOA,CAACC,IAAY,EAAEC,IAAY;IAChC;EAAA;EAGFN,eAAeA,CAAA;IACb,MAAMO,GAAG,GAAG,IAAIC,IAAI,EAAE;IACtB,MAAMC,KAAK,GAAG,IAAID,IAAI,CAACD,GAAG,CAACG,WAAW,EAAE,EAAEH,GAAG,CAACI,QAAQ,EAAE,EAAEJ,GAAG,CAACK,OAAO,EAAE,CAAC;IACxE,MAAMC,IAAI,GAAGN,GAAG,CAACO,OAAO,EAAE,GAAGL,KAAK,CAACK,OAAO,EAAE;IAC5C,OAAOC,IAAI,CAACC,KAAK,CAACH,IAAI,GAAG,IAAI,CAAC;EAChC;EAAC,QAAAlB,CAAA,G;qBA3BUN,oBAAoB;EAAA;EAAA,QAAA4B,EAAA,G;UAApB5B,oBAAoB;IAAA6B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCNjCrC,EAAA,CAAAuC,cAAA,cAAgB;QAEZvC,EAAA,CAAAC,SAAA,cAAsB;QAEtBD,EAAA,CAAAuC,cAAA,YAAO;QAAAvC,EAAA,CAAAwC,MAAA,qBAAc;QAAAxC,EAAA,CAAAyC,YAAA,EAAQ;QA2EjCzC,EAAA,CAAAuC,cAAA,WAAM;QAEEvC,EAAA,CAAAC,SAAA,aAAiC;QAGjCD,EAAA,CAAA0C,UAAA,KAAAC,oCAAA,iBAAyE;QAC7E3C,EAAA,CAAAyC,YAAA,EAAM;;;QADkDzC,EAAA,CAAA4C,SAAA,IAAa;QAAb5C,EAAA,CAAA6C,UAAA,YAAAP,GAAA,CAAAlC,UAAA,CAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}